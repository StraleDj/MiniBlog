<li class="comment even thread-even depth-1" id="li-comment-1">
    <div id="comment-1" class="comment-wrap clearfix">
        <div class="comment-meta">
            <div class="comment-author vcard">
                <span class="comment-avatar clearfix">
                    <img alt="" src="@Model.GravatarUrl(50)" class="avatar avatar-60 photo avatar-default" height="60" width="60">
                </span>
            </div>
        </div>
        <div class="comment-content clearfix">
            <div class="comment-author">@Model.Author<span><a href="#" title="Permalink to this comment">@Date()</a></span></div>
            <p>@Html.Raw(Model.ContentWithLinks())</p>
            <a class="comment-reply-link" href="#"><i class="icon-reply"></i></a>
        </div>
        <div class="clear"></div>
    </div>
</li>
@helper Date()
{
var title = Model.PubDate.ToString("yyyy-MM-ddTHH:mm");
var display = Model.PubDate.ToString("MMMM d. yyyy HH:mm");
    <time datetime="@title" itemprop="commentTime">@display</time>
}
@helper Author()
{
if (string.IsNullOrEmpty(Model.Website))
{
        <strong itemprop="creator">@Model.Author</strong>
}
else
{
        <strong itemprop="creator"><a href="@Model.Website" itemprop="url" rel="nofollow">@Model.Author</a></strong>
}
}
@helper DeleteAndApproveButton()
{
if (User.Identity.IsAuthenticated)
{
        <button class="deletecomment btn btn-link">Delete</button>
    if (Blog.ModerateComments && !Model.IsApproved)
    {
            <button class="approvecomment btn btn-link">Approve</button>
    }
}
}
@helper ApprovalMessage()
{
if (Blog.ModerateComments && !Model.IsApproved && !User.Identity.IsAuthenticated)
{
        <div itemprop="approvalWarning">! The comment will not be visible until a moderator approves it !</div>
}
}
